<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0425.1340                               -->
<workbook original-version='18.1' source-build='2024.1.2 (20241.24.0425.1340)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.Layers.true...Layers />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Tableau_17168798842040' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Project EXCEL TABLEU)' inline='true' name='federated.00rt4my0do15w11fz6ox7068vk8n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Project EXCEL TABLEU' name='excel-direct.176nisc0ltan8c1bpvvit1xd2ppg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/ulannnn/Project EXCEL TABLEU.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.176nisc0ltan8c1bpvvit1xd2ppg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O2147483647:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='real' name='airport_name' ordinal='8' />
            <column datatype='real' name='arr_delay' ordinal='9' />
            <column datatype='real' name='carrier_delay' ordinal='10' />
            <column datatype='real' name='weather_delay' ordinal='11' />
            <column datatype='real' name='nas_delay' ordinal='12' />
            <column datatype='real' name='security_delay' ordinal='13' />
            <column datatype='real' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.176nisc0ltan8c1bpvvit1xd2ppg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:O10001:no:A1:O2147483647:0' header='yes' outcome='2'>
            <column datatype='integer' name='year' ordinal='0' />
            <column datatype='integer' name='month' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='string' name='carrier' ordinal='3' />
            <column datatype='string' name='carrier_name' ordinal='4' />
            <column datatype='string' name='airport' ordinal='5' />
            <column datatype='string' name='city' ordinal='6' />
            <column datatype='string' name='state' ordinal='7' />
            <column datatype='real' name='airport_name' ordinal='8' />
            <column datatype='real' name='arr_delay' ordinal='9' />
            <column datatype='real' name='carrier_delay' ordinal='10' />
            <column datatype='real' name='weather_delay' ordinal='11' />
            <column datatype='real' name='nas_delay' ordinal='12' />
            <column datatype='real' name='security_delay' ordinal='13' />
            <column datatype='real' name='late_aircraft_delay' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month</remote-name>
            <remote-type>20</remote-type>
            <local-name>[month]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>month</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>carrier</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[carrier_name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>carrier_name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport</remote-name>
            <remote-type>130</remote-type>
            <local-name>[airport]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RID_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>airport_name</remote-name>
            <remote-type>5</remote-type>
            <local-name>[airport_name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>airport_name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>arr_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[arr_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>arr_delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>carrier_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[carrier_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>carrier_delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weather_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[weather_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>weather_delay</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nas_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[nas_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>nas_delay</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>security_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[security_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>security_delay</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>late_aircraft_delay</remote-name>
            <remote-type>5</remote-type>
            <local-name>[late_aircraft_delay]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>late_aircraft_delay</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>7</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:O10001:no:A1:O2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Carer Delay Percentage' datatype='real' name='[Calculation_1199646373439234048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0580541F90664E2C923D31477A566141]' role='measure' type='quantitative' />
      <column caption='Airport' datatype='string' name='[airport]' role='dimension' type='nominal' />
      <column aggregation='Sum' caption='Airport Name' datatype='real' name='[airport_name]' role='dimension' semantic-role='[Airport].[Name]' type='ordinal' />
      <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
      <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
      <column caption='Carrier Delay' datatype='real' name='[carrier_delay]' role='measure' type='quantitative' />
      <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
      <column caption='Month' datatype='integer' name='[month]' role='dimension' type='quantitative' />
      <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
      <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
      <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Carrier)' hidden='true' name='[Action (Carrier)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[carrier]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Date))' hidden='true' name='[Action (MONTH(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='state, city'>
          <field>[state]</field>
          <field>[city]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/MSI-PC/AppData/Local/Temp/TableauTemp/#TableauTemp_0wgfvrt001568w1cw9yb91cck5wd.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/27/2024 01:13:56 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>month</remote-name>
              <remote-type>20</remote-type>
              <local-name>[month]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>month</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>67</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[carrier_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_name</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport</remote-name>
              <remote-type>129</remote-type>
              <local-name>[airport]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport</remote-alias>
              <ordinal>5</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>930</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>city</remote-alias>
              <ordinal>6</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>873</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>state</remote-name>
              <remote-type>129</remote-type>
              <local-name>[state]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>state</remote-alias>
              <ordinal>7</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>61</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>airport_name</remote-name>
              <remote-type>5</remote-type>
              <local-name>[airport_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>airport_name</remote-alias>
              <ordinal>8</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>arr_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[arr_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>arr_delay</remote-alias>
              <ordinal>9</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10447</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>carrier_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[carrier_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>carrier_delay</remote-alias>
              <ordinal>10</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6573</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weather_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[weather_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weather_delay</remote-alias>
              <ordinal>11</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2311</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nas_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[nas_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nas_delay</remote-alias>
              <ordinal>12</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3479</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>security_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[security_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>security_delay</remote-alias>
              <ordinal>13</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>489</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>late_aircraft_delay</remote-name>
              <remote-type>5</remote-type>
              <local-name>[late_aircraft_delay]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>late_aircraft_delay</remote-alias>
              <ordinal>14</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6116</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0580541F90664E2C923D31477A566141]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:carrier:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;HA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;9E&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MQ&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EV&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;YX&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WN&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;F9&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;QX&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;UA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;YV&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;NK&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;G4&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AS&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;VX&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;B6&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:city:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devils Lake&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greensboro/High Point&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honolulu&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kalispell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lewisburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portsmouth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Augusta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlotte Amalie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elmira/Corning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hattiesburg/Laurel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lynchburg&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhinelander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St. Augustine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Worcester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bristol/Johnson City/Kingsport&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Del Rio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Evansville&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Junction&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hibbing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joplin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manhattan/Ft. Riley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ogden&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Plattsburgh&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Petersburg&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vernal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Youngstown/Warren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anchorage&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bethel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cape Girardeau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dothan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Dodge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gulfport/Biloxi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lihue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Haven&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pago Pago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sheridan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Palm Beach/Palm Beach&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allentown/Bethlehem/Easton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cody&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dickinson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flagstaff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nantucket&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Prescott&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saginaw/Bay City/Midland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scottsbluff&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sun Valley/Hailey/Ketchum&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alamosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Barrow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Christiansted&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Juneau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marquette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montrose/Delta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ogdensburg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rock Springs&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santa Rosa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;State College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bloomington/Normal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charleston/Dunbar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Harrisburg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kotzebue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Williston&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gillette&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hayden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jacksonville/Camp Lejeune&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Bend/Coos Bay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Cloud&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrangell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ashland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bishop&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Champaign/Urbana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cordova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eagle&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fort Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hancock/Houghton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islip&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kodiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Minot&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Newburgh/Poughkeepsie&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pellston&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Raleigh/Durham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sitka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Traverse City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wichita Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Albany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baton Rouge&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fairbanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hilton Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kahului&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latrobe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Martha&apos;s Vineyard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mosinee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ponce&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sarasota/Bradenton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Staunton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Killeen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lincoln&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Midland/Odessa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New Orleans&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palm Springs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pullman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shreveport&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Yellowstone&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arcata/Eureka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Binghamton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cedar City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duluth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Leonard Wood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gustavus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;International Falls&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;King Salmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Punta Gorda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sioux City&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tokeen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;White Plains&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bismarck/Mandan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fort Wayne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Harlingen/San Benito&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ithaca/Cortland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kona&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mission/McAllen/Edinburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Newport News/Williamsburg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Williamsport&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dallas/Fort Worth&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elko&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hartford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jackson/Vicksburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Moab&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nome&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Petersburg&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alpena&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bemidji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cold Bay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dillingham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Flint&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kearney&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lexington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saipan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Scranton/Wilkes-Barre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Syracuse&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Beaumont/Port Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clarksburg/Fairmont&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hobbs&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kalamazoo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawton/Fort Sill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mason City&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Muskegon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sault Ste. Marie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stillwater&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Walla Walla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adak Island&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brainerd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Deadhorse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Escanaba&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grand Forks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hays&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mammoth Lakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Platte&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Riverton/Lander&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Valdosta&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yakima&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Birmingham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cedar Rapids/Iowa City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fort Myers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iron Mountain/Kingsfd&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pasco/Kennewick/Richland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bend/Redmond&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Butte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station/Bryan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dodge City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fort Collins/Loveland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hyannis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ketchikan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liberal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Bern/Morehead/Beaufort&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paducah&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salina&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wenatchee&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Aguadilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Branson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Johnstown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laramie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monterey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Roanoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yakutat&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='year' />
        <field-sort-custom-order field='month' />
        <field-sort-custom-order field='date' />
        <field-sort-custom-order field='carrier' />
        <field-sort-custom-order field='carrier_name' />
        <field-sort-custom-order field='airport' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='state' />
        <field-sort-custom-order field='airport_name' />
        <field-sort-custom-order field='arr_delay' />
        <field-sort-custom-order field='carrier_delay' />
        <field-sort-custom-order field='Calculation_1199646373439234048' />
        <field-sort-custom-order field='weather_delay' />
        <field-sort-custom-order field='nas_delay' />
        <field-sort-custom-order field='security_delay' />
        <field-sort-custom-order field='late_aircraft_delay' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0580541F90664E2C923D31477A566141'>
            <properties context=''>
              <relation connection='excel-direct.176nisc0ltan8c1bpvvit1xd2ppg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:O10001:no:A1:O2147483647:0' header='yes' outcome='2'>
                  <column datatype='integer' name='year' ordinal='0' />
                  <column datatype='integer' name='month' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='string' name='carrier' ordinal='3' />
                  <column datatype='string' name='carrier_name' ordinal='4' />
                  <column datatype='string' name='airport' ordinal='5' />
                  <column datatype='string' name='city' ordinal='6' />
                  <column datatype='string' name='state' ordinal='7' />
                  <column datatype='real' name='airport_name' ordinal='8' />
                  <column datatype='real' name='arr_delay' ordinal='9' />
                  <column datatype='real' name='carrier_delay' ordinal='10' />
                  <column datatype='real' name='weather_delay' ordinal='11' />
                  <column datatype='real' name='nas_delay' ordinal='12' />
                  <column datatype='real' name='security_delay' ordinal='13' />
                  <column datatype='real' name='late_aircraft_delay' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.00rt4my0do15w11fz6ox7068vk8n'>
      <datasources>
        <datasource caption='Sheet1 (Project EXCEL TABLEU)' name='federated.00rt4my0do15w11fz6ox7068vk8n' />
      </datasources>
      <datasource-dependencies datasource='federated.00rt4my0do15w11fz6ox7068vk8n'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]' included-values='in-range'>
        <min>#2017-01-01 00:00:00#</min>
        <max>#2022-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_E19170AF20A84273B4325F58E1CC106F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_291D8799C4E34646ABEFDCC819003925]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='US Flight Delay' type='sheet' worksheet='Carrier Delay' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='US Flight Delay' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Carrier'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Project EXCEL TABLEU)' name='federated.00rt4my0do15w11fz6ox7068vk8n' />
          </datasources>
          <datasource-dependencies datasource='federated.00rt4my0do15w11fz6ox7068vk8n'>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[carrier_name]' derivation='Attribute' name='[attr:carrier_name:nk]' pivot='key' type='nominal' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Name' datatype='string' name='[carrier_name]' role='dimension' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[carrier]' derivation='None' name='[none:carrier:nk]' pivot='key' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action2_291D8799C4E34646ABEFDCC819003925]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (MONTH(Date))]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]' />
              <tooltip column='[federated.00rt4my0do15w11fz6ox7068vk8n].[attr:carrier_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]</rows>
        <cols>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]</cols>
      </table>
      <simple-id uuid='{775370EE-7A44-431E-AB2D-53F60EB63E2F}' />
    </worksheet>
    <worksheet name='Carrier Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Project EXCEL TABLEU)' name='federated.00rt4my0do15w11fz6ox7068vk8n' />
          </datasources>
          <datasource-dependencies datasource='federated.00rt4my0do15w11fz6ox7068vk8n'>
            <column caption='Carer Delay Percentage' datatype='real' name='[Calculation_1199646373439234048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[carrier_delay]/[arr_delay]' />
            </column>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1199646373439234048]' derivation='Avg' name='[avg:Calculation_1199646373439234048:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='real' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_E19170AF20A84273B4325F58E1CC106F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (Carrier)]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[avg:Calculation_1199646373439234048:qk]' value='p0.0%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00rt4my0do15w11fz6ox7068vk8n].[avg:Calculation_1199646373439234048:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.00rt4my0do15w11fz6ox7068vk8n].[avg:Calculation_1199646373439234048:qk]</rows>
        <cols>[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{054F2B1A-B50D-4826-9401-D7CDBCEB1B7C}' />
    </worksheet>
    <worksheet name='Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Project EXCEL TABLEU)' name='federated.00rt4my0do15w11fz6ox7068vk8n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.00rt4my0do15w11fz6ox7068vk8n'>
            <column aggregation='Sum' caption='Airport Name' datatype='real' name='[airport_name]' role='dimension' semantic-role='[Airport].[Name]' type='ordinal' />
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column-instance column='[airport_name]' derivation='Attribute' name='[attr:airport_name:qk]' pivot='key' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[city]' derivation='None' name='[none:city:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_E19170AF20A84273B4325F58E1CC106F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action2_291D8799C4E34646ABEFDCC819003925]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Latitude (generated)]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Longitude (generated)]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (Carrier)]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (MONTH(Date))]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[Longitude (generated)]' field-type='quantitative' max='-7341608.7108812258' min='-15044586.460643681' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[Latitude (generated)]' field-type='quantitative' max='7599828.5461450517' min='2275865.8138095131' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' value='false' />
            <format attr='break-on-special' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:state:nk]' value='false' />
            <format attr='break-on-special' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:state:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:state:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes _.fcp.Layers.true...customization-axis='layer'>
          <_.fcp.Layers.true...pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:state:nk]' />
              <tooltip column='[federated.00rt4my0do15w11fz6ox7068vk8n].[attr:airport_name:qk]' />
            </encodings>
          </_.fcp.Layers.true...pane>
          <pane _.fcp.Layers.true...generated-title='State' id='0' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:state:nk]' />
              <color column='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' />
              <tooltip column='[federated.00rt4my0do15w11fz6ox7068vk8n].[attr:airport_name:qk]' />
              <geometry column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Geometry (generated)]' />
            </encodings>
          </pane>
          <_.fcp.Layers.true...pane generated-title='City' id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' />
              <size column='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' />
              <lod column='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' />
              <tooltip column='[federated.00rt4my0do15w11fz6ox7068vk8n].[attr:airport_name:qk]' />
              <lod column='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:state:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='3.5690608024597168' />
                <format attr='mark-transparency' value='221' />
              </style-rule>
            </style>
          </_.fcp.Layers.true...pane>
        </panes>
        <rows>[federated.00rt4my0do15w11fz6ox7068vk8n].[Latitude (generated)]</rows>
        <cols>[federated.00rt4my0do15w11fz6ox7068vk8n].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E79A5848-4E77-47D3-BD84-B26E760F3182}' />
    </worksheet>
    <worksheet name='Total Delay'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Project EXCEL TABLEU)' name='federated.00rt4my0do15w11fz6ox7068vk8n' />
          </datasources>
          <datasource-dependencies datasource='federated.00rt4my0do15w11fz6ox7068vk8n'>
            <column caption='Arr Delay' datatype='real' name='[arr_delay]' role='measure' type='quantitative' />
            <column caption='Carrier' datatype='string' name='[carrier]' role='dimension' type='nominal' />
            <column caption='Carrier Delay' datatype='real' name='[carrier_delay]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Late Aircraft Delay' datatype='real' name='[late_aircraft_delay]' role='measure' type='quantitative' />
            <column caption='Nas Delay' datatype='real' name='[nas_delay]' role='measure' type='quantitative' />
            <column caption='Security Delay' datatype='real' name='[security_delay]' role='measure' type='quantitative' />
            <column-instance column='[arr_delay]' derivation='Sum' name='[sum:arr_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[carrier_delay]' derivation='Sum' name='[sum:carrier_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[late_aircraft_delay]' derivation='Sum' name='[sum:late_aircraft_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[nas_delay]' derivation='Sum' name='[sum:nas_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[security_delay]' derivation='Sum' name='[sum:security_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[weather_delay]' derivation='Sum' name='[sum:weather_delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Weather Delay' datatype='real' name='[weather_delay]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:carrier_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:late_aircraft_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:nas_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:security_delay:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:weather_delay:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (Carrier)]'>
            <groupfilter function='level-members' level='[carrier]' user:ui-action-filter='[Action1_E19170AF20A84273B4325F58E1CC106F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (MONTH(Date))]'>
            <groupfilter function='level-members' level='[tmn:date:ok]' user:ui-action-filter='[Action2_291D8799C4E34646ABEFDCC819003925]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[:Measure Names]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (Carrier)]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[Action (MONTH(Date))]</column>
            <column>[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='bottom' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.00rt4my0do15w11fz6ox7068vk8n].[:Measure Names]' value='9' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.00rt4my0do15w11fz6ox7068vk8n].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00rt4my0do15w11fz6ox7068vk8n].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{DCDC6D0A-BEFF-44C6-8EFA-B6E75334D8B9}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='US Flight Delay'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (Project EXCEL TABLEU)' name='federated.00rt4my0do15w11fz6ox7068vk8n' />
      </datasources>
      <datasource-dependencies datasource='federated.00rt4my0do15w11fz6ox7068vk8n'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97856' id='19' param='vert' type-v2='layout-flow' w='99038' x='481' y='1072'>
            <zone h='7774' id='20' type-v2='title' w='99038' x='481' y='1072'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='90082' id='17' type-v2='layout-basic' w='99038' x='481' y='8846'>
              <zone h='77001' id='7' param='horz' type-v2='layout-flow' w='99038' x='481' y='21927'>
                <zone h='77001' id='5' type-v2='layout-basic' w='89423' x='481' y='21927'>
                  <zone h='77001' id='3' name='Map' w='44710' x='481' y='21927'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='38501' id='11' name='Carrier' w='44713' x='45191' y='21927'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='38500' id='13' name='Carrier Delay' w='44713' x='45191' y='60428'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='77001' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='9615' x='89904' y='21927'>
                  <zone h='10858' id='8' name='Map' pane-specification-id='0' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' type-v2='color' w='9615' x='89904' y='21927'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='22047' id='9' name='Map' pane-specification-id='2' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' type-v2='size' w='9615' x='89904' y='32785'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='22047' id='10' name='Map' pane-specification-id='2' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' type-v2='color' w='9615' x='89904' y='54832'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='22049' id='12' name='Carrier' pane-specification-id='0' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]' type-v2='color' w='9615' x='89904' y='76879'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='8331' id='14' name='Total Delay' show-title='false' w='99038' x='481' y='13596'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='4750' id='16' type-v2='layout-flow' w='99038' x='481' y='8846'>
                <zone h='4750' id='15' name='Carrier Delay' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99038' x='481' y='8846'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run fontalignment='1'>&lt;Sheet Name&gt;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97856' id='23' param='vert' type-v2='layout-flow' w='99038' x='481' y='1072'>
                <zone h='7774' id='20' type-v2='title' w='99038' x='481' y='1072'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='58' h='8331' id='14' is-fixed='true' name='Total Delay' show-title='false' w='99038' x='481' y='13596'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='77001' id='3' is-fixed='true' name='Map' w='44710' x='481' y='21927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10858' id='8' name='Map' pane-specification-id='0' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' type-v2='color' w='9615' x='89904' y='21927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22047' id='9' name='Map' pane-specification-id='2' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' type-v2='size' w='9615' x='89904' y='32785'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22047' id='10' name='Map' pane-specification-id='2' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' type-v2='color' w='9615' x='89904' y='54832'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38501' id='11' is-fixed='true' name='Carrier' w='44713' x='45191' y='21927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22049' id='12' name='Carrier' pane-specification-id='0' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]' type-v2='color' w='9615' x='89904' y='76879'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4750' id='15' name='Carrier Delay' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[tmn:date:qk]' show-title='false' type-v2='filter' values='database' w='99038' x='481' y='8846'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38500' id='13' is-fixed='true' name='Carrier Delay' w='44713' x='45191' y='60428'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12775219-E06A-4705-8C11-F3AABC109ADB}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[sum:arr_delay:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:airport_name:ok]</field>
            <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B3468C8-4BB6-455D-81B1-0ED18CE83A1B}' />
    </window>
    <window class='worksheet' name='Carrier'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]</field>
            <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DA12901B-A3F1-4A8C-AFA1-77F64D53316C}' />
    </window>
    <window class='worksheet' name='Carrier Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF36959B-FAED-4289-9F29-A75ADCF96737}' />
    </window>
    <window class='worksheet' name='Total Delay'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DDB1DB78-DC26-4685-AD21-114AD6B7E55F}' />
    </window>
    <window class='dashboard' maximized='true' name='US Flight Delay'>
      <viewpoints>
        <viewpoint name='Carrier'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:carrier:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Carrier Delay'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.00rt4my0do15w11fz6ox7068vk8n].[none:city:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Delay'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{A98DF500-150F-480B-88DF-D09E88C741D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Carrier' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Carrier Delay' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Map' width='192'>
      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
    </thumbnail>
    <thumbnail height='58' name='Total Delay' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='US Flight Delay' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
